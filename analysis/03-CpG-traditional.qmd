---
title: "CpG Traditional Analysis"
author: "Paolo Cozzi"
date: today
toc: true
number-sections: true
cache: true
format:
  html:
    code-line-numbers: true
    html-math-method: katex
    df-print: paged
    code-fold: true
    toc-depth: 5
    embed-resources: true  # Embed all resources directly into the HTML file
editor: source
---

```{r setup, output=FALSE}
library(here)
library(targets)
library(bsseq)
library(ggplot2)

# where I can find artifacts
store_path <- here::here("_targets")
```

## Describing data

I've just read the *bedMethyl* files using `targets`, and then I've filtered them
in order to focus on the regions of interest, which are the CpG islands with
a certain buffer around them. Load data about `valid_coverage` and `percent_modified`
for each samples from `5mC_5hmC` model and with `modkit --preset traditional`
(should be only `CpG` sites):

```{r load-data-5mC_5hmC}
tar_load(summary_coverage_data_5mC_5hmC, store = store_path)
summary_coverage_data_5mC_5hmC
```

Let's do the same for the `5mCG_5hmCG` model:

```{r load-data-5mCG_5hmCG}
tar_load(summary_coverage_data_5mCG_5hmCG, store = store_path)
summary_coverage_data_5mCG_5hmCG
```

Let's plot the distribution of `valid_coverage` accross all samples for the two
models respectively:

```{r plot-valid-coverage}
tar_load(plot_valid_coverage, store = store_path)
plot_valid_coverage
```

Plot the distribution of percent modified methylation:

```{r plot-percent-modified}
tar_load(plot_percent_modified, store = store_path)
plot_percent_modified
```

## Search for DMRs

Plot the distribution of *t-statistic*:

```{r plot-t-statistic}
tar_load(bsseq_tstat, store = store_path)
plot(bsseq_tstat)
```

Let's take the top 5 DMRs regions:_

```{r top-dmrs}
tar_load(dmrs, store = store_path)
head(dmrs, 5)
```

Create a plot with the best DMR:

```{r plot-top-dmr}
tar_load(BS.seq.ex.fit, store = store_path)
tar_load(geneTrack, store = store_path)

metadata <- pData(BS.seq.ex.fit)
metadata$col <- ifelse(metadata$breed == "Angus", "red", "blue")
pData(BS.seq.ex.fit) <- metadata
plotRegion(BS.seq.ex.fit, dmrs[1, ], extend = 5000, addRegions = dmrs, geneTrack = geneTrack)
```

Plot the other 4 top DMRs:

```{r plot-top-5-dmrs}
for (i in 2:5) {
  plotRegion(BS.seq.ex.fit, dmrs[i, ], extend = 5000, addRegions = dmrs, geneTrack = geneTrack)
}
```